service: hithlum-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage}
  httpApi:
    cors: true

custom:
  global: ${file(./global.yml):global}
  siteBucketName: hithlum-${opt:stage}-site
  s3Sync:
    - bucketName: ${self:custom.siteBucketName}
      localDir: ../frontend/dist

functions:
  hello:
    name: hithlum-${opt:stage}-hello
    handler: function/hello.main
    events:
      - httpApi:
          path: /hello
          method: get

  graphql:
    name: hithlum-${opt:stage}-graphql
    handler: function/graphql/graphql.main
    environment:
      STAGE: ${self:provider.stage}
      MANDOS_URL: ${self:custom.global.mandosUrl.${self:provider.stage}}
    events:
      - httpApi:
          path: /graphql
          method: post

  codegen:
    name: hithlum-${opt:stage}-codegen
    handler: function/graphql/codegen.main
    enabled: '"${self:provider.stage}" == "local"'
    environment:
      STAGE: ${self:provider.stage}
      MANDOS_URL: ${self:custom.global.mandosUrl.${self:provider.stage}}
    events:
      - httpApi:
          path: /codegen
          method: post

plugins:
  - serverless-esbuild
  - serverless-s3-sync
  - serverless-plugin-conditional-functions
  - serverless-offline

resources:
  Resources:
    siteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.siteBucketName}
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html
    siteS3AccessPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: siteBucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::${self:custom.siteBucketName}/*
    siteCloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          Origins:
            - DomainName: ${self:custom.siteBucketName}.s3.amazonaws.com
              Id: ReactApp
              CustomOriginConfig:
                HTTPPort: 80
                HTTPSPort: 443
                OriginProtocolPolicy: https-only
          Enabled: "true"
          DefaultRootObject: index.html
          CustomErrorResponses:
            - ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: ReactApp
            ForwardedValues:
              QueryString: "false"
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            CloudFrontDefaultCertificate: true
