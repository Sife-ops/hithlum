service: hithlum
frameworkVersion: "3"

plugins:
  - serverless-esbuild
  - serverless-lift
  - serverless-plugin-conditional-functions
  - serverless-offline

provider:
  name: aws
  region: us-east-1
  runtime: nodejs14.x
  stage: ${opt:stage}
  httpApi:
    cors: true
  environment:
    ARTICLE_QUEUE: ${construct:articleQueue.queueUrl}
    MANDOS_URL: ${self:custom.global.mandosUrl.${self:provider.stage}}
    STAGE: ${self:provider.stage}
    TABLE: ${self:service}-${opt:stage}-table-v1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:*:*:table/${self:provider.environment.TABLE}
            - arn:aws:dynamodb:*:*:table/${self:provider.environment.TABLE}/index/*

resources: ${file(./serverless/resources.yml)}

custom:
  global: ${file(./serverless/global.yml)}

functions:
  hello:
    name: ${self:service}-${opt:stage}-hello
    handler: function/hello.main
    events:
      - httpApi:
          path: /hello
          method: get

  graphql:
    name: ${self:service}-${opt:stage}-graphql
    handler: function/graphql/graphql.main
    events:
      - httpApi:
          path: /graphql
          method: post

  codegen:
    name: ${self:service}-${opt:stage}-codegen
    handler: function/graphql/codegen.main
    enabled: '"${self:provider.stage}" == "local"'
    events:
      - httpApi:
          path: /codegen
          method: post

constructs:
    articleQueue:
        type: queue
        worker:
            handler: function/article-queue-worker.main
